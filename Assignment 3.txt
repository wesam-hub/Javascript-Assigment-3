1- // Arrays
	a- Create an array containing all the neighbouring countries of a country of your
	choice. Choose a country which has at least 2 or 3 neighbours. Store the array
	into a variable called 'neighbours'
	b- At some point, a new country called 'Utopia' is created in the neighbourhood of
	your selected country. So add it to the end of the 'neighbours' array
	c- Unfortunately, after some time, the new country is dissolved. So remove it from
	the end of the array
	d- If the 'neighbours' array does not include the country ‘Germany’, log to the
	console: 'Probably not a central European country :D'
	e- Change the name of one of your neighbouring countries. To do that, find the
	index of the country in the 'neighbours' array, and then use that index to
	change the array at that index position. For example, you can search for
	'Sweden' in the array, and then replace it with 'Republic of Sweden'.

======================================================================================================

2- Write a function that takes a two strings as arguments return the number of times the first string occurs in the second string.

عدد مرات تكرار الحرف في الجملة 

ex: 
	## myFunction('m', 'How many times does the character occur in this sentence?') 
		Expected ==> 2

	## myFunction('h', 'How many times does the character occur in this sentence?')
		Expected ==> 4

===================================================================================================

3- Write a function that takes an object as argument , It should return an object with all original object properties (but ==> ما عدا) the property with key 'country' 

ex: 
	## myFunction({ city: 'Sacramento', state: 'California', country: 'USA', continent: 'North America' })
		Expected ==> { city: 'Sacramento', state: 'California', continent: 'North America' }

===================================================================================================


4 - Let's improve Steven's tip calculator even more, this time using loops!
	Your tasks:
		1. Create an array 'bills' containing all 10 test bill values
		2. Create empty arrays for the tips and the totals ('tips' and 'totals')
		3. Use the 'calcTip' function we wrote before (no need to repeat) to calculate
		tips and total values (bill + tip) for every bill value in the bills array. Use a for
		loop to perform the 10 calculations!

		## Test data: 22, 295, 176, 440, 37, 105, 10, 1100, 86 and 52
		## Hints: Call ‘calcTip‘ in the loop and use the push method to add values to the
		tips and totals arrays
 
		Bonus:
			4. Bonus: 
				Write a function 'calcAverage' which takes an array called 'arr' as
				an argument. This function calculates the average of all numbers in the given
				array.
 
				4.1. First, you will need to add up all values in the array. To do the addition,
				start by creating a variable 'sum' that starts at 0. Then loop over the
				array using a for loop. In each iteration, add the current value to the
				'sum' variable. This way, by the end of the loop, you have all values
				added together
				4.2. To calculate the average, divide the sum you calculated before by the
				length of the array (because that's the number of elements)
				4.3. Call the function with the 'totals' array

